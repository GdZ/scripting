#!/usr/bin/ruby
##
## Copyright (c) 2012, Cisco Systems, Inc.
##
## Author: Herry Wang (hailwang@cisco.com)
##
#
require "rubygems"
require "curb"
require "xmlsimple"
require "getoptlong"
getoptlong = GetoptLong.new(
    [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
    ["--url", "-u",GetoptLong::REQUIRED_ARGUMENT],
    ["--speed", "-S",GetoptLong::OPTIONAL_ARGUMENT],
    ["--duration", "-D",GetoptLong::OPTIONAL_ARGUMENT],
    ["--verbose", "-V",GetoptLong::OPTIONAL_ARGUMENT]
)
#url = "http://U11-220-4.se.wmt.auto-sj5.com/snowboard_100.wmv"
def usage()
    puts "Usage:"
    puts " [--help] [--speed 3.0] [--url url] [--verbose] [--duration 24] or "
    puts " [--help] [-S 3.0] [-u url] [-D 24] -V "
end

if ARGV.empty?
    puts "invalid! URL is required"
    usage()
    puts
    exit
end
speed = 1.0  # declare local var to store arg
url = nil # declare local var to store arg
duration = 999
verbose = false 
asxfile = false
logstat = true
total_bytes  = 0
end_of_stream = false
client_id = ''
#c.url = "#{url}"
#c.timeout= 10
begin
    getoptlong.each do |opt, arg|
        case opt
        when "--help"
            puts "show help"
        when "--speed"
            puts "Speed is " + arg
            speed = arg
        when "--duration"
            puts "Duration is " + arg
            duration = arg.to_i
        when "--verbose"
            verbose = true
        when "--url"
            puts "Requested URL is " + arg
            url = arg
        end
    end
rescue StandardError=>my_error_message
    puts
    puts my_error_message
    usage()
    puts
    exit
end

asxfile = true if /\.asx/ =~ url
playlist = Array.new
def asxparse (xml_data,protocol)
    playlist = Array.new
    data = XmlSimple.xml_in(xml_data)
    p data
    data['entry'].each do |item|
        item['ref'].each do |url|
            puts "playlist:" + url['href']
            playlist.push(url['href']) if /#{protocol}:\/\// =~ url['href']
        end
    end
    return playlist
end
if asxfile == true 
    puts "URL  == #{url}"
    c = Curl::Easy.new("#{url}") do |curl|
        curl.headers = ['User-Agent: Windows-Media-Player/11.0.5721.5280']
        curl.headers += ['Accept: */*']
        curl.headers += ['Accept-Encoding: gzip, deflate']
        curl.headers += ['Connection: Keep-Alive']
        curl.follow_location = true
    end

    c.on_body { |data| 
        print "Get One body with length: "+ data.length.to_s + "\r\n"
        #parsing XML message
        #puts data
        data = data.downcase
        playlist = asxparse(data,'http')
        data.length
    }
    #Send  request to get asx file
    c.perform
    if c.response_code != 200
        print "HTTP return code is "+ c.response_code.to_s + " exit\r\n"
        exit -1
    else
        print "HTTP return code is 200, Good\r\n"
    end
    content_len = '0'
    content_len = c.header_str.scan(/Content-Length:\s+(\d+)/).flatten[0]
    puts "Content-Length is #{content_len}" if verbose
    c.close
else
    playlist.push(url)
end

require './http-wmt.rb'
client1 = HttpWMTGet.new(url)
client1.verbose= verbose
client1.speed= speed
client1.duration = duration
playlist.each do |url|
    client1.url = url
    client1.do_download
    client1.post_log
end

